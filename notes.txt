Schedule
    Commence    : T
    Tea Break   : T + 1:30 Hrs (for 15 mins)
    Lunch       : T + 2:30 Hrs (for 45 mins)
    Tea Break   : After Lunch + 1:30 Hrs (for 15 mins)
    End         : T + 7 Hrs

Methodology
    No Powerpoints
    Hands-on driven

About You:
    Name
    Primary skillset
    Experience in Graphql / relay (if any)


What GraphQL?

    Protocol
    Schema
    Query
    TypeSafe

    GraphQL is a specification for a query language.

Why GraphQL?
    Underfetching
    Overfetching 

Data

Web Services

<Invoice>
    <id>
    <date>
    <products>
        <id>
        <name>
        <price>
        <quantity>
    </products>
    <customer>
        <id>
        <name>
        <email>
        <phone>
    </customer>
</Invoice>


REST service
JSON
http://myApi.com/users
http://myApi.com/users/1
http://myApi.com/products


http://myApi.com/invoice/1001
{
    "id": 1001,
    "date": "2018-01-01",
    "invValue" : 200
    "products": [
        {
            "id": 1,
            "name": "Product 1",
            "price": 100,
            "quantity": 1
        },
        {
            "id": 2,
            "name": "Product 2",
            "price": 200,
            "quantity": 2
        }
    ],
    "customer": {
        "id": 1,
        "name": "John Doe",
        "email": "john@email.com",
    }
}


Read Optimized
RDBMS (Write Optimized) (Effective for updates) (Transaction)
Read & Append
Analytical
Realtime


GrapqhQL
    Schema
        Types
        Queries -> Response
        Mutations
        Subscriptions

Type System
    Scalar Type
        ID
        Int
        Float
        String
        Boolean

    Object
        fields (scalar type / object type / array type)

    Enum
    Interface 
    Union
    Input Object



interface Action{
    id
    date
    bugId
}

OpenAction
    id
    date
    bugId
    openedBy
    description

CommentAction
    id
    date
    bugId
    commentedBy
    comment

FixAction
    id
    date
    bugId
    fixedBy
    solution

CloseAction
    id
    date
    bugId
    closedBy

Query User 
    user | error


Setup the server
    cd graphql-server
    npm install
    npm start

User
Project
Bug
Actions

select * from users


Rendering Stratagies
    Fetch On Render
        Fetch
        Render

    Fetch Then Render
        Better user experience

    Render as you fetch (Concurrent, Suspense)
        Begin fetching
        Begin rendering

fetch as you render
    useQueryLoader
    usePreloadedQuery

    child components
        useFragment

fetch on render
    useLazyLoadQuery

Relay 
    GraphQL 
    Store
        action-11
        action-12
        action-13
        action-21
        action-22
        action-23
        bug-1
            reference to action-11
            reference to action-12
            reference to action-13
        bug-2
            reference to action-21
            reference to action-22
            reference to action-23
        project-1
            reference to bug-1
            reference to bug-2
    Cache

    Relay Compiler
        compiles graphql queries
            validates the query against the schema
            Creates typedefs for the queries and the results
                flow
                typescript

            AST for the queries

    Relay Runtime
    Relay APIs

Query1
project-1
    id
    name
    description
    bug-1
        action-11
        action-12
        action-13
    bug-2
        action-21
        action-22
        action-23

Query2
action-11


Creating a Relay application
    yarn create react-app relay-app --template typescript
    cd react-app
    yarn add react-relay relay-runtime
    yarn add -D relay-compiler relay-compiler-language-typescript @types/react-relay babel-relay-plugin graphql relay-config
